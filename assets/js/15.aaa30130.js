(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{393:function(t,s,a){"use strict";a.r(s);var e=a(28),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("h2",{attrs:{id:"quick-start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quick-start"}},[t._v("#")]),t._v(" Quick Start")]),t._v(" "),a("p",[t._v("Please go to the [CPU Architecture] folder and click NSudo.exe. Follow the\nprompts. For example, if you want to use 64-bit NSudo on your Intel or AMD\ndevice, you need to go to the x64 folder and click NSudoG.exe")]),t._v(" "),a("h2",{attrs:{id:"command-line"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command-line"}},[t._v("#")]),t._v(" Command Line")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("Format: NSudoL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Options and parameters "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Command line or ShortCut Command\n\nOptions:\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("U:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Option "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Create a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),t._v(" with specified user option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nAvailable options:\n    T TrustedInstaller\n    S System\n    C Current User\n    E Current User "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Elevated"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    P Current "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Process")]),t._v("\n    D Current "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Process")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Drop right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v(": This is a mandatory parameter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("P:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Option "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Create a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),t._v(" with specified privilege option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \nAvailable options:\n    E Enable All Privileges\n    D Disable All Privileges\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" you want to use the default privileges to create a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" please "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" \nnot include the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-P"')]),t._v(" parameter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("M:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Option "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Create a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),t._v(" with specified Integrity Level option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nAvailable options:\n    S System\n    H High\n    M Medium\n    L Low\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" you want to use the default Integrity Level to create a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" please \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" not include the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-M"')]),t._v(" parameter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Priority:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Option "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Create a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),t._v(" with specified "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),t._v(" priority option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nAvailable options:\n    Idle\n    BelowNormal\n    Normal\n    AboveNormal\n    High\n    RealTime\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" you want to use the default "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Process")]),t._v(" Priority to create a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" please\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" not include the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-Priority"')]),t._v(" parameter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ShowWindowMode:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Option "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Create a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),t._v(" with specified window mode option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nAvailable options:\n    Show\n    Hide\n    Maximize\n    Minimize\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" you want to use the default window mode to create a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" please "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" \nnot include the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-ShowWindowMode"')]),t._v(" parameter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Wait Make NSudo Launcher wait "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the created "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),t._v(" to "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" before exiting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" you don"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t want to wait, please do not include the \"-Wait\" parameter.\n\n-CurrentDirectory:[ DirectoryPath ] Set the current directory for the process.\nPS: If you want to use the NSudo Launcher'")]),t._v("s current directory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" please "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" not \ninclude the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-CurrentDirectory"')]),t._v(" parameter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("UseCurrentConsole Create a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),t._v(" with the current console window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" you want to create a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),t._v(" with the new console window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" please "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" not \ninclude the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-UseCurrentConsole"')]),t._v(" parameter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Version Show version information of NSudo Launcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("? Show this content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("H Show this content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Help Show this content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\nPlease use https:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Thdub"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("NSudo_Installer "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" context menu management"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v(":\n    1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" All NSudo Launcher command arguments is case"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("insensitive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" You can use the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),t._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--"')]),t._v(" override "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" and use the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"="')]),t._v(" override "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" in\n       the command line parameters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/U:T"')]),t._v(" and "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-U=T"')]),t._v(" are \n       equivalent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" To ensure the best experience"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NSudoLC does not support context menu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\nExample:\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" you want to run Command Prompt with TrustedInstaller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" enable all \n    privileges and the default Integrity Level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n        NSudoL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("U:T "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("P:E cmd\n")])])]),a("p",[t._v("Example: If you want to run Command Prompt with TrustedInstaller, enable all\nprivileges and the default Integrity Level:")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("NSudo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("U:T "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("P:E cmd\n")])])]),a("p",[t._v("Starting from NSudo 5.0.1708.16, the command line nested quotes is supported.\nFor example:")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("NSudo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("U:T cmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dir "')]),t._v("C:\\Program Files"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" & pause"')]),t._v("\n")])])]),a("h2",{attrs:{id:"shortcut-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shortcut-list"}},[t._v("#")]),t._v(" Shortcut List")]),t._v(" "),a("p",[t._v("You can edit NSudo.json to custom the Shortcut list, here are the demo\n(NSudo.json in the NSudo.exe's folder):")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ShortCutList_V2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Command Prompt"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cmd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"PowerShell"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"powershell"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"PowerShell ISE"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"powershell_ise"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Edit Hosts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"notepad %windir%\\\\System32\\\\Drivers\\\\etc\\\\hosts"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);