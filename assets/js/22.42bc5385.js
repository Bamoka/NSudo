(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{393:function(a,e,_){"use strict";_.r(e);var t=_(26),s=Object(t.a)({},(function(){var a=this,e=a.$createElement,_=a._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h1",{attrs:{id:"nsudo-共享库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#nsudo-共享库"}},[a._v("#")]),a._v(" NSudo 共享库")]),a._v(" "),_("h2",{attrs:{id:"nsudocreateprocess-函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#nsudocreateprocess-函数"}},[a._v("#")]),a._v(" NSudoCreateProcess 函数")]),a._v(" "),_("p",[a._v("创建一个新进程和对应的主线程。")]),a._v(" "),_("h3",{attrs:{id:"c-c-函数原型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#c-c-函数原型"}},[a._v("#")]),a._v(" C/C++ 函数原型")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[a._v("EXTERN_C HRESULT WINAPI NSudoCreateProcess(\n    _In_ NSUDO_USER_MODE_TYPE UserModeType,\n    _In_ NSUDO_PRIVILEGES_MODE_TYPE PrivilegesModeType,\n    _In_ NSUDO_MANDATORY_LABEL_TYPE MandatoryLabelType,\n    _In_ NSUDO_PROCESS_PRIORITY_CLASS_TYPE ProcessPriorityClassType,\n    _In_ NSUDO_SHOW_WINDOW_MODE_TYPE ShowWindowModeType,\n    _In_ DWORD WaitInterval,\n    _In_ BOOL CreateNewConsole,\n    _In_ LPCWSTR CommandLine,\n    _In_opt_ LPCWSTR CurrentDirectory);\n")])])]),_("h3",{attrs:{id:"usermodetype-参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#usermodetype-参数"}},[a._v("#")]),a._v(" UserModeType 参数")]),a._v(" "),_("p",[a._v("一个类型为 NSUDO_USER_MODE_TYPE 枚举类型的值, 用以表示用户类别。")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[a._v("typedef enum class _NSUDO_USER_MODE_TYPE\n{\n    DEFAULT,\n    TRUSTED_INSTALLER,\n    SYSTEM,\n    CURRENT_USER,\n    CURRENT_PROCESS,\n    CURRENT_PROCESS_DROP_RIGHT\n} NSUDO_USER_MODE_TYPE, *PNSUDO_USER_MODE_TYPE;\n")])])]),_("h3",{attrs:{id:"privilegesmodetype-参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#privilegesmodetype-参数"}},[a._v("#")]),a._v(" PrivilegesModeType 参数")]),a._v(" "),_("p",[a._v("一个类型为 NSUDO_PRIVILEGES_MODE_TYPE 枚举类型的值, 用以表示特权类型。")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[a._v("typedef enum class _NSUDO_PRIVILEGES_MODE_TYPE\n{\n    DEFAULT,\n    ENABLE_ALL_PRIVILEGES,\n    DISABLE_ALL_PRIVILEGES\n} NSUDO_PRIVILEGES_MODE_TYPE, *PNSUDO_PRIVILEGES_MODE_TYPE;\n")])])]),_("h3",{attrs:{id:"mandatorylabeltype-参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mandatorylabeltype-参数"}},[a._v("#")]),a._v(" MandatoryLabelType 参数")]),a._v(" "),_("p",[a._v("一个类型为 NSUDO_MANDATORY_LABEL_TYPE 枚举类型的值, 用以表示完整性标签。")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[a._v("typedef enum class _NSUDO_MANDATORY_LABEL_TYPE\n{\n    UNTRUSTED,\n    LOW,\n    MEDIUM,\n    MEDIUM_PLUS,\n    HIGH,\n    SYSTEM,\n    PROTECTED_PROCESS,\n} NSUDO_MANDATORY_LABEL_TYPE, *PNSUDO_MANDATORY_LABEL_TYPE;\n")])])]),_("h3",{attrs:{id:"processpriorityclasstype-参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#processpriorityclasstype-参数"}},[a._v("#")]),a._v(" ProcessPriorityClassType 参数")]),a._v(" "),_("p",[a._v("一个类型为 NSUDO_PROCESS_PRIORITY_CLASS_TYPE 枚举类型的值, 用以表示进程优先级。")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[a._v("typedef enum class _NSUDO_PROCESS_PRIORITY_CLASS_TYPE\n{\n    IDLE,\n    BELOW_NORMAL,\n    NORMAL,\n    ABOVE_NORMAL,\n    HIGH,\n    REALTIME,\n} NSUDO_PROCESS_PRIORITY_CLASS_TYPE, *PNSUDO_PROCESS_PRIORITY_CLASS_TYPE;\n")])])]),_("h3",{attrs:{id:"showwindowmodetype-参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#showwindowmodetype-参数"}},[a._v("#")]),a._v(" ShowWindowModeType 参数")]),a._v(" "),_("p",[a._v("一个类型为 NSUDO_SHOW_WINDOW_MODE_TYPE 枚举类型的值, 用以表示显示窗口模式。")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[a._v("typedef enum class _NSUDO_SHOW_WINDOW_MODE_TYPE\n{\n    DEFAULT,\n    SHOW,\n    HIDE,\n    MAXIMIZE,\n    MINIMIZE,\n} NSUDO_SHOW_WINDOW_MODE_TYPE, *PNSUDO_SHOW_WINDOW_MODE_TYPE;\n")])])]),_("h3",{attrs:{id:"waitinterval-参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#waitinterval-参数"}},[a._v("#")]),a._v(" WaitInterval 参数")]),a._v(" "),_("p",[a._v("等待创建的进程的时间 (毫秒)。")]),a._v(" "),_("h3",{attrs:{id:"createnewconsole-参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#createnewconsole-参数"}},[a._v("#")]),a._v(" CreateNewConsole 参数")]),a._v(" "),_("p",[a._v("如果这个参数设为 TRUE, 新进程则在新的控制台窗口运行, 否则则直接在父进程对应的控\n制台窗口运行 (默认设定)。")]),a._v(" "),_("h3",{attrs:{id:"commandline-参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#commandline-参数"}},[a._v("#")]),a._v(" CommandLine 参数")]),a._v(" "),_("p",[a._v("要执行的命令行, 对应的字符串最大长度为 32k 即 32768 字符, 命令行所执行的应用的\n路径被限制为 MAX_PATH 即 260 字符。")]),a._v(" "),_("h3",{attrs:{id:"currentdirectory-参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#currentdirectory-参数"}},[a._v("#")]),a._v(" CurrentDirectory 参数")]),a._v(" "),_("p",[a._v("用来指定进程的当前目录, 需要使用完整路径。可以使用 UNC 路径。如果该参数为\nnullptr, 新进程将使用调用该函数的进程所使用的当前路径。")]),a._v(" "),_("h3",{attrs:{id:"返回值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[a._v("#")]),a._v(" 返回值")]),a._v(" "),_("p",[a._v("HRESULT 类型。如果函数调用成功, 则返回值为 S_OK。")]),a._v(" "),_("h2",{attrs:{id:"c-接口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#c-接口"}},[a._v("#")]),a._v(" C# 接口")]),a._v(" "),_("p",[a._v("在你的项目中加载 M2.NSudo 程序集, 你就会知晓其用法。")]),a._v(" "),_("h3",{attrs:{id:"代码示例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#代码示例"}},[a._v("#")]),a._v(" 代码示例")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[a._v('using System;\n\nnamespace M2.NSudo.Demo\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            NSudoInstance instance = new NSudoInstance();\n\n            instance.CreateProcess(\n                NSUDO_USER_MODE_TYPE.TRUSTED_INSTALLER,\n                NSUDO_PRIVILEGES_MODE_TYPE.ENABLE_ALL_PRIVILEGES,\n                NSUDO_MANDATORY_LABEL_TYPE.SYSTEM,\n                NSUDO_PROCESS_PRIORITY_CLASS_TYPE.NORMAL,\n                NSUDO_SHOW_WINDOW_MODE_TYPE.DEFAULT,\n                0,\n                true,\n                "cmd",\n                null);\n\n            Console.ReadKey();\n        }\n    }\n}\n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);